diff --git a/gme/CMakeLists.txt b/gme/CMakeLists.txt
index b1b2bf0..4c6ed27 100644
--- a/gme/CMakeLists.txt
+++ b/gme/CMakeLists.txt
@@ -17,7 +17,7 @@ set(libgme_SRCS Blip_Buffer.cpp
 # static builds need to find static zlib (and static forms of other needed
 # libraries.  Ensure CMake looks only for static libs if we're doing a static
 # build.  See https://stackoverflow.com/a/44738756
-if(NOT BUILD_SHARED_LIBS)
+if(0)
     set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
 endif()
 
@@ -164,7 +164,9 @@ endif()
 # On some platforms we may need to change headers or whatnot based on whether
 # we're building the library or merely using the library. The following is
 # only defined when building the library to allow us to tell which is which.
-add_definitions(-DBLARGG_BUILD_DLL)
+if (NOT CMAKE_STATIC_LINK)
+    add_definitions(-DBLARGG_BUILD_DLL)
+endif()
 
 # For the gme_types.h
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
diff --git a/gme/blargg_source.h b/gme/blargg_source.h
index deea918..719f6ab 100644
--- a/gme/blargg_source.h
+++ b/gme/blargg_source.h
@@ -34,7 +34,7 @@
 /* Like printf() except output goes to debug log file. Might be defined to do
  * nothing (not even evaluate its arguments).
  * void debug_printf( const char* format, ... ); */
-#if defined(__cplusplus) && defined(BLARGG_BUILD_DLL)
+#if defined(__cplusplus)
     static inline void blargg_dprintf_( const char* fmt_str, ... ) { (void) fmt_str; }
     #undef debug_printf
     #define debug_printf (1) ? (void) 0 : blargg_dprintf_
